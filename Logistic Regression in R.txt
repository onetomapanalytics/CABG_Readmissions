LOGISTIC REGRESSION PREDICTING READMISSION in R 

##Reading Data
```{r}
options(max.print=999999999)
options(warn=-1)

library(readstata13)
data2<-read.dta13(file = "" )


# looking at the dimensions of the dataset
dim(data2)

# looking at any missing values in our dataset
sum(is.na(data2))

# taking a look at the structure of the varaibles in the dataset
#str(data2)
# Converting all the variables of the dataset into categorical variables 
data2[c(1:12)] <- lapply(data2[,c(1:12)] , as.numeric)
data2[c(13:57)] <- lapply(data2[,c(13:57)] , factor)

str(data2[1:57])

# Splitting the dataset into Training and testing datasets to train and test the model performance

# set an arbitrarily high seed for reproducibility
# split data2 into a train and a test set; train, test, and model. The train and test split is 70/30
set.seed(4321)
ind <- sample(2, nrow(data2), replace=TRUE, prob=c(0.7, 0.3))
train_data <- data2[ind==1,]
test_data <- data2[ind==2,]

nrow(train_data)

nrow(test_data)


```
## Running a Logisitc Regression Model 
```{r}
options(warn=-1)
library(caret)
library(party)
library(ROCR)
library(pROC)
library(dplyr)
library(dplyr)
library(broom)
library(margins)
library(gtsummary)
library(xlsx)
library(rJava)


#  Running the Generalised Logistic Regression on Training dataset
set.seed(123)
model.logit.data.full <- glm(READMIT2 ~ . , data=train_data, family = "binomial")

# looking at the summary of the results
summary(model.logit.data.full)


#Running a backwards stepwise regression 
library(MASS)

model.logit.data <-step(model.logit.data.full)

summary(model.logit.data)


## odds ratios and 95% CI
odds.ratios<-exp(cbind(OR = coef(model.logit.data), confint(model.logit.data)));odds.ratios

OR<-tbl_regression(model.logit.data, exponentiate = TRUE); OR

# Looking at the vector of most important variables from the model
varImp(model.logit.data)

```
# Using the ROCR and Proc functions to compute AUC and ROC for the Logistic Regression Model
```{r}
options(warn=-1)
library(ROCR)
library(pROC)
p.2<-predict(model.logit.data, newdata = test_data, type = "response", se.fit = FALSE)

# ROC for the logistic regression model, the AUC and 95% confidence intervals are also diplayed in the the result.
roc.logit.data<-roc(test_data$READMIT2,p.2, auc = T, ci = T) ;roc.logit.data


#Plotting the ROC Curve 
ggroc(roc.logit.data, colour = 'steelblue', size = 2) +
  ggtitle(paste0('Logisitc Regression Model ROC Curve ', '(AUC = ', round((roc.logit.data$auc),3), ')'))+
geom_abline(intercept=1, slope = 1, color="red", linetype="dashed")


```
